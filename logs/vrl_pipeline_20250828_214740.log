2025-08-28T21:47:40.951856Z INFO     vrl_testing_loop_clean:_setup_logging:158 - VRL Testing Pipeline logging initialized
2025-08-28T21:47:40.952000Z INFO     vrl_testing_loop_clean:_setup_logging:159 - Log file: logs/vrl_pipeline_20250828_214740.log
2025-08-28T21:47:40.952065Z INFO     vrl_testing_loop_clean:_setup_logging:160 - Sample file: samples/large/ssh-real.ndjson
2025-08-28T21:47:40.952117Z INFO     vrl_testing_loop_clean:_setup_logging:161 - Output directory: samples-parsed
2025-08-28T21:47:40.952162Z INFO     vrl_testing_loop_clean:_setup_logging:162 - External configs: external
2025-08-28T21:47:40.952206Z INFO     vrl_testing_loop_clean:_setup_logging:163 - Loaded configs: ['vector_vrl_prompt', 'parser_prompts', 'type_maps']
2025-08-28T21:47:53.655188Z INFO     vrl_testing_loop_clean:__init__:119 - Benchmarking local CPU performance...
2025-08-28T21:47:53.659705Z INFO     vrl_testing_loop_clean:__init__:121 - CPU benchmark multiplier: 10.00x
2025-08-28T21:47:53.659930Z INFO     vrl_testing_loop_clean:__init__:124 - Measuring Vector CLI startup time...
2025-08-28T21:47:54.162018Z INFO     vrl_testing_loop_clean:__init__:126 - Vector startup time: 0.50s
2025-08-28T21:47:54.162209Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1089 - üìã EXTERNAL CONFIGS SUMMARY (K8s deployed):
2025-08-28T21:47:54.162361Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1096 -    üéØ vector-vrl-system.md: v1.3.0...
2025-08-28T21:47:54.162434Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1097 -       Contains: Performance tiers, string ops, Vector 0.49.0 config
2025-08-28T21:47:54.162492Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1101 -    üîß parser-system-prompts.md: 14317 chars of project overrides
2025-08-28T21:47:54.162561Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1107 -    üìä type_maps.csv: 24 field mappings for product evolution
2025-08-28T21:47:54.162617Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1109 -    üí° These configs are retained for persistent LLM context
2025-08-28T21:47:54.668869Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1223 - ü§ñ Starting automated LLM VRL generation
2025-08-28T21:47:54.669025Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1224 - Provider: anthropic, Max iterations: 2
2025-08-28T21:47:54.675508Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1232 - üîß Optimizing samples with pre-tokenizer...
2025-08-28T21:47:54.978302Z INFO     pre_tokenizer.enhanced_optimizer:smart_sample_selection:132 - Found 1 distinct patterns in 655147 samples
2025-08-28T21:48:01.229087Z SUCCESS  pre_tokenizer.enhanced_optimizer:smart_sample_selection:172 - Selected 3 samples covering 1 patterns
2025-08-28T21:48:01.351551Z INFO     pre_tokenizer.pre_tokenizer:__init__:41 - Initialized PreTokenizer for claude-3-opus-20240229 with 30,000 max tokens
2025-08-28T21:48:01.351751Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:101 - Optimizing 3 samples for 30,000 tokens
2025-08-28T21:48:01.352162Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:116 - Reduced to 3 unique samples from 3
2025-08-28T21:48:01.352242Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:117 - Pattern distribution: {'auth': 1}
2025-08-28T21:48:01.353534Z SUCCESS  pre_tokenizer.pre_tokenizer:optimize_samples:190 - Selected 3 samples using 1,278 tokens
2025-08-28T21:48:01.353608Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:191 - Pattern coverage: 100.0%
2025-08-28T21:48:01.353660Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1263 - üìä Sample optimization: 655147 ‚Üí 3 samples
2025-08-28T21:48:01.353712Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1264 - üìä Token usage: 1,278 tokens
2025-08-28T21:48:01.353756Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1265 - üìä Pattern coverage: 100.0%
2025-08-28T21:48:01.384977Z INFO     llm_iterative_session:_init_anthropic:433 - üîç Auto-detecting latest Anthropic model...
2025-08-28T21:48:01.385141Z INFO     llm_iterative_session:_detect_best_anthropic_model:140 - üîç Querying Anthropic API for available models...
2025-08-28T21:48:01.692301Z INFO     llm_iterative_session:_detect_best_anthropic_model:166 - Available Anthropic models: ['claude-opus-4-1-20250805', 'claude-opus-4-20250514', 'claude-sonnet-4-20250514', 'claude-3-7-sonnet-20250219', 'claude-3-5-sonnet-20241022']...
2025-08-28T21:48:01.693008Z INFO     llm_iterative_session:_detect_best_anthropic_model:187 - ‚úÖ Selected best Opus model: claude-opus-4-1-20250805
2025-08-28T21:48:01.694870Z INFO     llm_iterative_session:_init_anthropic:435 - üéØ Selected model: claude-opus-4-1-20250805
2025-08-28T21:48:02.022599Z INFO     llm_iterative_session:__init__:124 - ü§ñ Iterative LLM Session initialized
2025-08-28T21:48:02.023541Z INFO     llm_iterative_session:__init__:125 -    Provider: anthropic
2025-08-28T21:48:02.023615Z INFO     llm_iterative_session:__init__:126 -    Model: claude-opus-4-1-20250805
2025-08-28T21:48:02.023675Z INFO     llm_iterative_session:__init__:127 -    Session: llm_session_20250828_214801
2025-08-28T21:48:02.023734Z INFO     llm_iterative_session:__init__:131 - üìä Model Capabilities:
2025-08-28T21:48:02.023798Z INFO     llm_iterative_session:__init__:132 -    Context Window: 200,000 tokens
2025-08-28T21:48:02.023869Z INFO     llm_iterative_session:__init__:133 -    Max Input: 200,000 tokens
2025-08-28T21:48:02.023940Z INFO     llm_iterative_session:__init__:134 -    Max Output: 4,096 tokens
2025-08-28T21:48:02.023989Z INFO     llm_iterative_session:__init__:136 -    Cost: $0.000015/input, $0.000075/output per token
2025-08-28T21:48:02.024033Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1271 - üí∞ Cost tracking: $0.000015/input token, $0.000075/output token
2025-08-28T21:48:02.024081Z INFO     llm_iterative_session:generate_initial_vrl:679 - üöÄ Starting VRL generation session (iteration 1)
2025-08-28T21:48:02.025683Z INFO     prompt_optimizer:_optimize_initial_configs:82 - Compressed vector_vrl_prompt: 20935 ‚Üí 18968 chars (9.4% reduction)
2025-08-28T21:48:02.026004Z INFO     prompt_optimizer:_optimize_initial_configs:101 - Compressed parser_prompts: 14317 ‚Üí 2311 chars (83.9% reduction)
2025-08-28T21:48:02.026098Z INFO     prompt_optimizer:_optimize_initial_configs:133 - Compressed type_maps: 2877 ‚Üí 2749 chars (4.4% reduction)
2025-08-28T21:48:02.026689Z DEBUG    llm_iterative_session:_save_conversation:1297 - üíæ Saved user message to .tmp/llm_sessions/llm_session_20250828_214801/iter1_user.txt
2025-08-28T21:48:02.026743Z INFO     llm_iterative_session:_call_llm:1022 - üì§ Calling anthropic API
2025-08-28T21:48:02.026791Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 30093 chars
2025-08-28T21:48:56.390767Z INFO     llm_iterative_session:_call_llm:1038 - üì• Response received in 54.4s (5659 chars)
2025-08-28T21:48:56.391710Z DEBUG    llm_iterative_session:_save_conversation:1297 - üíæ Saved assistant message to .tmp/llm_sessions/llm_session_20250828_214801/iter1_assistant.txt
2025-08-28T21:48:56.391846Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1285 - Testing iteration 1
2025-08-28T21:48:56.391969Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1133 - ============================================================
2025-08-28T21:48:56.392042Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1133 - TESTING LLM-GENERATED VRL (Iteration 1)
2025-08-28T21:48:56.392086Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1133 - ============================================================
2025-08-28T21:48:56.392137Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1133 - 
1. TESTING WITH PyVRL
2025-08-28T21:48:56.392182Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1133 - ----------------------------------------
2025-08-28T21:48:56.392489Z DEBUG    model_specific_vrl_fixer:get_model_specific_fixer:415 - Using Claude Opus fixer (default)
2025-08-28T21:48:56.392540Z INFO     model_specific_vrl_fixer:apply_model_specific_fixes:456 - üîß Applying Claude Opus specific fixes...
2025-08-28T21:48:56.392622Z INFO     vrl_error_fixes:apply_all_fixes:292 - üîß Found 0 applicable fixes for error codes: []
2025-08-28T21:48:56.395958Z ERROR    vrl_testing_loop_clean:test_with_pyvrl:333 - ‚úó PyVRL validation failed: 
error[E620]: can't abort infallible function
   ‚îå‚îÄ :36:13
   ‚îÇ
36 ‚îÇ     parts = split!(msg, "rhost=")
   ‚îÇ             ^^^^^- remove this abort-instruction
   ‚îÇ             ‚îÇ
   ‚îÇ             this function can't fail
   ‚îÇ
   = see documentation about error handling at https://errors.vrl.dev/#handling
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
   ‚îå‚îÄ :84:13
   ‚îÇ
84 ‚îÇ     parts = split!(msg, " for ")
   ‚îÇ             ^^^^^- remove this abort-instruction
   ‚îÇ             ‚îÇ
   ‚îÇ             this function can't fail
   ‚îÇ
   = see documentation about error handling at https://errors.vrl.dev/#handling
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ‚îå‚îÄ :135:15
    ‚îÇ
135 ‚îÇ       parts = split!(msg, " for ")
    ‚îÇ               ^^^^^- remove this abort-instruction
    ‚îÇ               ‚îÇ
    ‚îÇ               this function can't fail
    ‚îÇ
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ‚îå‚îÄ :163:13
    ‚îÇ
163 ‚îÇ     parts = split!(msg, "by authenticating user ")
    ‚îÇ             ^^^^^- remove this abort-instruction
    ‚îÇ             ‚îÇ
    ‚îÇ             this function can't fail
    ‚îÇ
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ‚îå‚îÄ :178:11
    ‚îÇ
178 ‚îÇ   parts = split!(msg, "Invalid user ")
    ‚îÇ           ^^^^^- remove this abort-instruction
    ‚îÇ           ‚îÇ
    ‚îÇ           this function can't fail
    ‚îÇ
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ‚îå‚îÄ :190:19
    ‚îÇ
190 ‚îÇ   .ssh_username = downcase!(string!(.ssh_username))
    ‚îÇ                   ^^^^^^^^- remove this abort-instruction
    ‚îÇ                   ‚îÇ
    ‚îÇ                   this function can't fail
    ‚îÇ
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ‚îå‚îÄ :194:22
    ‚îÇ
194 ‚îÇ   .ssh_source_host = downcase!(string!(.ssh_source_host))
    ‚îÇ                      ^^^^^^^^- remove this abort-instruction
    ‚îÇ                      ‚îÇ
    ‚îÇ                      this function can't fail
    ‚îÇ
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ‚îå‚îÄ :199:21
    ‚îÇ
199 ‚îÇ   .ssh_event_type = string!(.ssh_event_type)  # string_lowcardinality
    ‚îÇ                     ^^^^^^- remove this abort-instruction
    ‚îÇ                     ‚îÇ
    ‚îÇ                     this function can't fail
    ‚îÇ
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ‚îå‚îÄ :211:28
    ‚îÇ
211 ‚îÇ   .ssh_disconnect_reason = string!(.ssh_disconnect_reason)  # string_lowcardinality
    ‚îÇ                            ^^^^^^- remove this abort-instruction
    ‚îÇ                            ‚îÇ
    ‚îÇ                            this function can't fail
    ‚îÇ
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

2025-08-28T21:48:56.396098Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1133 - ‚ùå LLM VRL iteration 1 failed PyVRL validation
2025-08-28T21:48:56.396581Z INFO     error_batch_collector:collect_all_errors:46 - üìã Phase 1: PyVRL syntax validation
2025-08-28T21:48:56.396672Z INFO     error_batch_collector:collect_all_errors:52 - üìã Phase 2: Vector CLI validation
2025-08-28T21:48:56.403621Z INFO     error_batch_collector:collect_all_errors:75 - üìä Collected 1 total errors
2025-08-28T21:48:56.403715Z INFO     error_batch_collector:collect_all_errors:79 -    other: 1 errors
2025-08-28T21:48:56.403781Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1375 - üìä Collected 1 errors for batch fixing
2025-08-28T21:48:56.403874Z INFO     llm_iterative_session:iterate_with_feedback:713 - üîÑ Iterating VRL generation (iteration 2)
2025-08-28T21:48:56.404127Z DEBUG    llm_iterative_session:_save_conversation:1297 - üíæ Saved user message to .tmp/llm_sessions/llm_session_20250828_214801/iter2_user.txt
2025-08-28T21:48:56.404192Z DEBUG    llm_iterative_session:_call_llm:1019 - Adding 1.4s delay for iteration 2 to avoid rate limits
2025-08-28T21:48:57.804358Z INFO     llm_iterative_session:_call_llm:1022 - üì§ Calling anthropic API
2025-08-28T21:48:57.805473Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 465 chars
