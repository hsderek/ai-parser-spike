2025-08-28T18:11:02.009795Z INFO     vrl_testing_loop_clean:_setup_logging:152 - VRL Testing Pipeline logging initialized
2025-08-28T18:11:02.009994Z INFO     vrl_testing_loop_clean:_setup_logging:153 - Log file: logs/vrl_pipeline_20250828_181102.log
2025-08-28T18:11:02.010132Z INFO     vrl_testing_loop_clean:_setup_logging:154 - Sample file: samples/large/apache-real.ndjson
2025-08-28T18:11:02.010266Z INFO     vrl_testing_loop_clean:_setup_logging:155 - Output directory: samples-parsed
2025-08-28T18:11:02.010394Z INFO     vrl_testing_loop_clean:_setup_logging:156 - External configs: external
2025-08-28T18:11:02.010528Z INFO     vrl_testing_loop_clean:_setup_logging:157 - Loaded configs: ['vector_vrl_prompt', 'parser_prompts', 'type_maps']
2025-08-28T18:11:03.284318Z INFO     vrl_testing_loop_clean:__init__:113 - Benchmarking local CPU performance...
2025-08-28T18:11:03.288598Z INFO     vrl_testing_loop_clean:__init__:115 - CPU benchmark multiplier: 10.00x
2025-08-28T18:11:03.288847Z INFO     vrl_testing_loop_clean:__init__:118 - Measuring Vector CLI startup time...
2025-08-28T18:11:03.791455Z INFO     vrl_testing_loop_clean:__init__:120 - Vector startup time: 0.50s
2025-08-28T18:11:03.791751Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1067 - 📋 EXTERNAL CONFIGS SUMMARY (K8s deployed):
2025-08-28T18:11:03.791983Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1074 -    🎯 vector-vrl-system.md: v1.3.0...
2025-08-28T18:11:03.792122Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1075 -       Contains: Performance tiers, string ops, Vector 0.49.0 config
2025-08-28T18:11:03.792241Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1079 -    🔧 parser-system-prompts.md: 10690 chars of project overrides
2025-08-28T18:11:03.792418Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1085 -    📊 type_maps.csv: 24 field mappings for product evolution
2025-08-28T18:11:03.794969Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1087 -    💡 These configs are retained for persistent LLM context
2025-08-28T18:11:03.805941Z INFO     __main__:test_with_metrics:154 - 🚀 Starting VRL generation with full optimization suite...
2025-08-28T18:11:05.072841Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1201 - 🤖 Starting automated LLM VRL generation
2025-08-28T18:11:05.073585Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1202 - Provider: anthropic, Max iterations: 10
2025-08-28T18:11:05.088846Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1210 - 🔧 Optimizing samples with pre-tokenizer...
2025-08-28T18:11:05.140532Z INFO     pre_tokenizer.enhanced_optimizer:smart_sample_selection:132 - Found 1 distinct patterns in 56482 samples
2025-08-28T18:11:05.387175Z SUCCESS  pre_tokenizer.enhanced_optimizer:smart_sample_selection:172 - Selected 3 samples covering 1 patterns
2025-08-28T18:11:05.514407Z INFO     pre_tokenizer.pre_tokenizer:__init__:41 - Initialized PreTokenizer for claude-3-opus-20240229 with 30,000 max tokens
2025-08-28T18:11:05.514794Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:101 - Optimizing 3 samples for 30,000 tokens
2025-08-28T18:11:05.515313Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:116 - Reduced to 3 unique samples from 3
2025-08-28T18:11:05.515459Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:117 - Pattern distribution: {'error': 2}
2025-08-28T18:11:05.517057Z SUCCESS  pre_tokenizer.pre_tokenizer:optimize_samples:190 - Selected 3 samples using 1,778 tokens
2025-08-28T18:11:05.517194Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:191 - Pattern coverage: 100.0%
2025-08-28T18:11:05.517319Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1241 - 📊 Sample optimization: 56482 → 3 samples
2025-08-28T18:11:05.517440Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1242 - 📊 Token usage: 1,778 tokens
2025-08-28T18:11:05.517566Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1243 - 📊 Pattern coverage: 100.0%
2025-08-28T18:11:05.546399Z INFO     llm_iterative_session:_init_anthropic:433 - 🔍 Auto-detecting latest Anthropic model...
2025-08-28T18:11:05.546734Z INFO     llm_iterative_session:_detect_best_anthropic_model:140 - 🔍 Querying Anthropic API for available models...
2025-08-28T18:11:05.895098Z INFO     llm_iterative_session:_detect_best_anthropic_model:166 - Available Anthropic models: ['claude-opus-4-1-20250805', 'claude-opus-4-20250514', 'claude-sonnet-4-20250514', 'claude-3-7-sonnet-20250219', 'claude-3-5-sonnet-20241022']...
2025-08-28T18:11:05.895260Z INFO     llm_iterative_session:_detect_best_anthropic_model:187 - ✅ Selected best Opus model: claude-opus-4-1-20250805
2025-08-28T18:11:05.896119Z INFO     llm_iterative_session:_init_anthropic:435 - 🎯 Selected model: claude-opus-4-1-20250805
2025-08-28T18:11:06.266739Z INFO     llm_iterative_session:__init__:124 - 🤖 Iterative LLM Session initialized
2025-08-28T18:11:06.267147Z INFO     llm_iterative_session:__init__:125 -    Provider: anthropic
2025-08-28T18:11:06.267200Z INFO     llm_iterative_session:__init__:126 -    Model: claude-opus-4-1-20250805
2025-08-28T18:11:06.267250Z INFO     llm_iterative_session:__init__:127 -    Session: llm_session_20250828_181105
2025-08-28T18:11:06.267289Z INFO     llm_iterative_session:__init__:131 - 📊 Model Capabilities:
2025-08-28T18:11:06.267334Z INFO     llm_iterative_session:__init__:132 -    Context Window: 200,000 tokens
2025-08-28T18:11:06.267380Z INFO     llm_iterative_session:__init__:133 -    Max Input: 200,000 tokens
2025-08-28T18:11:06.267417Z INFO     llm_iterative_session:__init__:134 -    Max Output: 4,096 tokens
2025-08-28T18:11:06.267467Z INFO     llm_iterative_session:__init__:136 -    Cost: $0.000015/input, $0.000075/output per token
2025-08-28T18:11:06.267516Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1249 - 💰 Cost tracking: $0.000015/input token, $0.000075/output token
2025-08-28T18:11:06.267580Z INFO     llm_iterative_session:generate_initial_vrl:679 - 🚀 Starting VRL generation session (iteration 1)
2025-08-28T18:11:06.269241Z INFO     prompt_optimizer:_optimize_initial_configs:82 - Compressed vector_vrl_prompt: 19919 → 18026 chars (9.5% reduction)
2025-08-28T18:11:06.269480Z INFO     prompt_optimizer:_optimize_initial_configs:101 - Compressed parser_prompts: 10690 → 1988 chars (81.4% reduction)
2025-08-28T18:11:06.269652Z INFO     prompt_optimizer:_optimize_initial_configs:133 - Compressed type_maps: 2877 → 2749 chars (4.4% reduction)
2025-08-28T18:11:06.270454Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved user message to .tmp/llm_sessions/llm_session_20250828_181105/iter1_user.txt
2025-08-28T18:11:06.270515Z INFO     llm_iterative_session:_call_llm:1022 - 📤 Calling anthropic API
2025-08-28T18:11:06.270793Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 30288 chars
2025-08-28T18:11:51.185775Z INFO     llm_iterative_session:_call_llm:1038 - 📥 Response received in 44.9s (5693 chars)
2025-08-28T18:11:51.186304Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved assistant message to .tmp/llm_sessions/llm_session_20250828_181105/iter1_assistant.txt
2025-08-28T18:11:51.186365Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1263 - Testing iteration 1
2025-08-28T18:11:51.186424Z INFO     __main__:tracked_run:117 - 📍 Iteration 1
2025-08-28T18:11:51.186494Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:11:51.186564Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - TESTING LLM-GENERATED VRL (Iteration 1)
2025-08-28T18:11:51.186613Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:11:51.186676Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - 
1. TESTING WITH PyVRL
2025-08-28T18:11:51.186728Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ----------------------------------------
2025-08-28T18:11:51.192814Z ERROR    vrl_testing_loop_clean:test_with_pyvrl:311 - ✗ PyVRL validation failed: 
error[E203]: syntax error
   ┌─ :21:9
   │
21 │       return
   │ ╭──────────^
   │ │ ╭────────'
22 │ │ │ }
   │ ╰─│^ unexpected syntax token: "Newline"
   │   ╰' expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :22:1
   │
22 │ }
   │ ^
   │ │
   │ unexpected syntax token: "RBrace"
   │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :89:35
   │
89 │       .apache.message = msg_parts[parts_count - 1]
   │                                   ^^^^^^^^^^^
   │                                   │
   │                                   unexpected syntax token: "Identifier"
   │                                   expected one of: "integer literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :90:5
   │
90 │     }
   │     ^
   │     │
   │     unexpected syntax token: "RBrace"
   │     expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :91:3
   │
91 │   }
   │   ^
   │   │
   │   unexpected syntax token: "RBrace"
   │   expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E110]: fallible predicate
    ┌─ :102:21
    │
102 │         if contains(code_section, ".") {
    │                     ^^^^^^^^^^^^
    │                     │
    │                     this expression resolves to one of string or null
    │                     but the parameter "value" expects the exact type string
    │
    = try: ensuring an appropriate type at runtime
    =
    =     code_section = string!(code_section)
    =     contains(code_section, ".")
    =
    = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails
    =
    =     code_section = to_string(code_section) ?? "default"
    =     contains(code_section, ".")
    =
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = learn more about error code 110 at https://errors.vrl.dev/110
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E110]: fallible predicate
    ┌─ :136:19
    │
136 │       if contains(host_section, "\"") {
    │                   ^^^^^^^^^^^^
    │                   │
    │                   this expression resolves to one of string or null
    │                   but the parameter "value" expects the exact type string
    │
    = try: ensuring an appropriate type at runtime
    =
    =     host_section = string!(host_section)
    =     contains(host_section, """)
    =
    = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails
    =
    =     host_section = to_string(host_section) ?? "default"
    =     contains(host_section, """)
    =
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = learn more about error code 110 at https://errors.vrl.dev/110
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E110]: fallible predicate
    ┌─ :150:19
    │
150 │       if contains(uri_section, "\"") {
    │                   ^^^^^^^^^^^
    │                   │
    │                   this expression resolves to one of string or null
    │                   but the parameter "value" expects the exact type string
    │
    = try: ensuring an appropriate type at runtime
    =
    =     uri_section = string!(uri_section)
    =     contains(uri_section, """)
    =
    = try: coercing to an appropriate type and specifying a default value as a fallback in case coercion fails
    =
    =     uri_section = to_string(uri_section) ?? "default"
    =     contains(uri_section, """)
    =
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = learn more about error code 110 at https://errors.vrl.dev/110
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :167:1
    │
167 │ } else {
    │ ^
    │ │
    │ unexpected syntax token: "RBrace"
    │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :181:1
    │
181 │ }
    │ ^
    │ │
    │ unexpected syntax token: "RBrace"
    │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ┌─ :185:28
    │
185 │   .apache.level = downcase(string!(.apache.level))
    │                            ^^^^^^- remove this abort-instruction
    │                            │
    │                            this function can't fail
    │
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E620]: can't abort infallible function
    ┌─ :189:29
    │
189 │   .apache.module = downcase(string!(.apache.module))
    │                             ^^^^^^- remove this abort-instruction
    │                             │
    │                             this function can't fail
    │
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

2025-08-28T18:11:51.193565Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ❌ LLM VRL iteration 1 failed PyVRL validation
2025-08-28T18:11:51.197133Z INFO     error_batch_collector:collect_all_errors:46 - 📋 Phase 1: PyVRL syntax validation
2025-08-28T18:11:51.197229Z INFO     error_batch_collector:collect_all_errors:52 - 📋 Phase 2: Vector CLI validation
2025-08-28T18:11:51.216537Z INFO     error_batch_collector:collect_all_errors:75 - 📊 Collected 1 total errors
2025-08-28T18:11:51.216832Z INFO     error_batch_collector:collect_all_errors:79 -    other: 1 errors
2025-08-28T18:11:51.216971Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1331 - 📊 Collected 1 errors for batch fixing
2025-08-28T18:11:51.217070Z INFO     llm_iterative_session:iterate_with_feedback:713 - 🔄 Iterating VRL generation (iteration 2)
2025-08-28T18:11:51.217381Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved user message to .tmp/llm_sessions/llm_session_20250828_181105/iter2_user.txt
2025-08-28T18:11:51.217473Z DEBUG    llm_iterative_session:_call_llm:1019 - Adding 1.4s delay for iteration 2 to avoid rate limits
2025-08-28T18:11:52.618004Z INFO     llm_iterative_session:_call_llm:1022 - 📤 Calling anthropic API
2025-08-28T18:11:52.618312Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 465 chars
2025-08-28T18:12:42.590204Z INFO     llm_iterative_session:_call_llm:1038 - 📥 Response received in 50.0s (6079 chars)
2025-08-28T18:12:42.590662Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved assistant message to .tmp/llm_sessions/llm_session_20250828_181105/iter2_assistant.txt
2025-08-28T18:12:42.590748Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1263 - Testing iteration 2
2025-08-28T18:12:42.590831Z INFO     __main__:tracked_run:117 - 📍 Iteration 2
2025-08-28T18:12:42.590932Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:12:42.591003Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - TESTING LLM-GENERATED VRL (Iteration 2)
2025-08-28T18:12:42.591060Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:12:42.591125Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - 
1. TESTING WITH PyVRL
2025-08-28T18:12:42.591197Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ----------------------------------------
2025-08-28T18:12:42.593230Z ERROR    vrl_testing_loop_clean:test_with_pyvrl:311 - ✗ PyVRL validation failed: 
error[E203]: syntax error
   ┌─ :88:37
   │
88 │         .apache.message = msg_parts[parts_count - 1]
   │                                     ^^^^^^^^^^^
   │                                     │
   │                                     unexpected syntax token: "Identifier"
   │                                     expected one of: "integer literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :89:7
   │
89 │       }
   │       ^
   │       │
   │       unexpected syntax token: "RBrace"
   │       expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :90:5
   │
90 │     }
   │     ^
   │     │
   │     unexpected syntax token: "RBrace"
   │     expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
   ┌─ :93:17
   │
93 │     if contains(msg, "mod_security") {
   │                 ^^^
   │                 │
   │                 undefined variable
   │                 did you mean "null"?
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :131:17
    │
131 │     if contains(msg, "[hostname \"") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :145:17
    │
145 │     if contains(msg, "[uri \"") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :159:17
    │
159 │     if contains(msg, "File does not exist: ") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :166:3
    │
166 │   } else {
    │   ^
    │   │
    │   unexpected syntax token: "RBrace"
    │   expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :168:23
    │
168 │     .apache.message = msg
    │                       ^^^
    │                       │
    │                       undefined variable
    │                       did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :171:17
    │
171 │     if contains(msg, "error") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :180:3
    │
180 │   }
    │   ^
    │   │
    │   unexpected syntax token: "RBrace"
    │   expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :190:1
    │
190 │ }
    │ ^
    │ │
    │ unexpected syntax token: "RBrace"
    │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

2025-08-28T18:12:42.593355Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ❌ LLM VRL iteration 2 failed PyVRL validation
2025-08-28T18:12:42.593439Z INFO     error_batch_collector:collect_all_errors:46 - 📋 Phase 1: PyVRL syntax validation
2025-08-28T18:12:42.593509Z INFO     error_batch_collector:collect_all_errors:52 - 📋 Phase 2: Vector CLI validation
2025-08-28T18:12:42.600788Z INFO     error_batch_collector:collect_all_errors:75 - 📊 Collected 1 total errors
2025-08-28T18:12:42.600928Z INFO     error_batch_collector:collect_all_errors:79 -    other: 1 errors
2025-08-28T18:12:42.600996Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1331 - 📊 Collected 1 errors for batch fixing
2025-08-28T18:12:42.601061Z INFO     llm_iterative_session:iterate_with_feedback:713 - 🔄 Iterating VRL generation (iteration 3)
2025-08-28T18:12:42.601342Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved user message to .tmp/llm_sessions/llm_session_20250828_181105/iter3_user.txt
2025-08-28T18:12:42.601417Z DEBUG    llm_iterative_session:_call_llm:1019 - Adding 1.6s delay for iteration 3 to avoid rate limits
2025-08-28T18:12:44.201592Z INFO     llm_iterative_session:_call_llm:1022 - 📤 Calling anthropic API
2025-08-28T18:12:44.201856Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 168 chars
2025-08-28T18:13:35.926218Z INFO     llm_iterative_session:_call_llm:1038 - 📥 Response received in 51.7s (6351 chars)
2025-08-28T18:13:35.927431Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved assistant message to .tmp/llm_sessions/llm_session_20250828_181105/iter3_assistant.txt
2025-08-28T18:13:35.927547Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1263 - Testing iteration 3
2025-08-28T18:13:35.927641Z INFO     __main__:tracked_run:117 - 📍 Iteration 3
2025-08-28T18:13:35.927754Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:13:35.927837Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - TESTING LLM-GENERATED VRL (Iteration 3)
2025-08-28T18:13:35.927905Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:13:35.928035Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - 
1. TESTING WITH PyVRL
2025-08-28T18:13:35.928116Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ----------------------------------------
2025-08-28T18:13:35.930718Z ERROR    vrl_testing_loop_clean:test_with_pyvrl:311 - ✗ PyVRL validation failed: 
error[E203]: syntax error
   ┌─ :92:39
   │
92 │           .apache.message = msg_parts[last_index]
   │                                       ^^^^^^^^^^
   │                                       │
   │                                       unexpected syntax token: "Identifier"
   │                                       expected one of: "integer literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :93:9
   │
93 │         }
   │         ^
   │         │
   │         unexpected syntax token: "RBrace"
   │         expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :94:7
   │
94 │       }
   │       ^
   │       │
   │       unexpected syntax token: "RBrace"
   │       expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :95:5
   │
95 │     }
   │     ^
   │     │
   │     unexpected syntax token: "RBrace"
   │     expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
   ┌─ :98:17
   │
98 │     if contains(msg, "mod_security") {
   │                 ^^^
   │                 │
   │                 undefined variable
   │                 did you mean "null"?
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :136:17
    │
136 │     if contains(msg, "[hostname \"") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :150:17
    │
150 │     if contains(msg, "[uri \"") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :164:17
    │
164 │     if contains(msg, "File does not exist: ") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :171:3
    │
171 │   } else {
    │   ^
    │   │
    │   unexpected syntax token: "RBrace"
    │   expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :173:23
    │
173 │     .apache.message = msg
    │                       ^^^
    │                       │
    │                       undefined variable
    │                       did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E701]: call to undefined variable
    ┌─ :176:17
    │
176 │     if contains(msg, "error") {
    │                 ^^^
    │                 │
    │                 undefined variable
    │                 did you mean "null"?
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :185:3
    │
185 │   }
    │   ^
    │   │
    │   unexpected syntax token: "RBrace"
    │   expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :195:1
    │
195 │ }
    │ ^
    │ │
    │ unexpected syntax token: "RBrace"
    │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

2025-08-28T18:13:35.930881Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ❌ LLM VRL iteration 3 failed PyVRL validation
2025-08-28T18:13:35.931004Z INFO     error_batch_collector:collect_all_errors:46 - 📋 Phase 1: PyVRL syntax validation
2025-08-28T18:13:35.931104Z INFO     error_batch_collector:collect_all_errors:52 - 📋 Phase 2: Vector CLI validation
2025-08-28T18:13:35.941133Z INFO     error_batch_collector:collect_all_errors:75 - 📊 Collected 1 total errors
2025-08-28T18:13:35.941387Z INFO     error_batch_collector:collect_all_errors:79 -    other: 1 errors
2025-08-28T18:13:35.941493Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1331 - 📊 Collected 1 errors for batch fixing
2025-08-28T18:13:35.941595Z INFO     llm_iterative_session:iterate_with_feedback:713 - 🔄 Iterating VRL generation (iteration 4)
2025-08-28T18:13:35.942027Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved user message to .tmp/llm_sessions/llm_session_20250828_181105/iter4_user.txt
2025-08-28T18:13:35.942101Z DEBUG    llm_iterative_session:_call_llm:1019 - Adding 1.8s delay for iteration 4 to avoid rate limits
2025-08-28T18:13:37.742292Z INFO     llm_iterative_session:_call_llm:1022 - 📤 Calling anthropic API
2025-08-28T18:13:37.744050Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 168 chars
