2025-08-28T17:59:48.905073Z INFO     vrl_testing_loop_clean:_setup_logging:152 - VRL Testing Pipeline logging initialized
2025-08-28T17:59:48.905316Z INFO     vrl_testing_loop_clean:_setup_logging:153 - Log file: logs/vrl_pipeline_20250828_175948.log
2025-08-28T17:59:48.905370Z INFO     vrl_testing_loop_clean:_setup_logging:154 - Sample file: samples/large/apache-real.ndjson
2025-08-28T17:59:48.905409Z INFO     vrl_testing_loop_clean:_setup_logging:155 - Output directory: samples-parsed
2025-08-28T17:59:48.905447Z INFO     vrl_testing_loop_clean:_setup_logging:156 - External configs: external
2025-08-28T17:59:48.905486Z INFO     vrl_testing_loop_clean:_setup_logging:157 - Loaded configs: ['vector_vrl_prompt', 'parser_prompts', 'type_maps']
2025-08-28T17:59:50.031776Z INFO     vrl_testing_loop_clean:__init__:113 - Benchmarking local CPU performance...
2025-08-28T17:59:50.036201Z INFO     vrl_testing_loop_clean:__init__:115 - CPU benchmark multiplier: 10.00x
2025-08-28T17:59:50.036535Z INFO     vrl_testing_loop_clean:__init__:118 - Measuring Vector CLI startup time...
2025-08-28T17:59:50.540081Z INFO     vrl_testing_loop_clean:__init__:120 - Vector startup time: 0.50s
2025-08-28T17:59:50.540681Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1067 - 📋 EXTERNAL CONFIGS SUMMARY (K8s deployed):
2025-08-28T17:59:50.541063Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1074 -    🎯 vector-vrl-system.md: v1.3.0...
2025-08-28T17:59:50.541337Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1075 -       Contains: Performance tiers, string ops, Vector 0.49.0 config
2025-08-28T17:59:50.541456Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1079 -    🔧 parser-system-prompts.md: 10690 chars of project overrides
2025-08-28T17:59:50.541641Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1085 -    📊 type_maps.csv: 24 field mappings for product evolution
2025-08-28T17:59:50.541857Z INFO     vrl_testing_loop_clean:_log_external_configs_summary:1087 -    💡 These configs are retained for persistent LLM context
2025-08-28T17:59:50.542037Z INFO     __main__:main:48 - Starting automated VRL generation with optimizations...
2025-08-28T17:59:50.542526Z INFO     __main__:main:49 - Provider: Anthropic
2025-08-28T17:59:50.542574Z INFO     __main__:main:50 - Max iterations: 2
2025-08-28T17:59:50.542609Z INFO     __main__:main:51 - 
2025-08-28T17:59:51.707450Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1201 - 🤖 Starting automated LLM VRL generation
2025-08-28T17:59:51.707681Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1202 - Provider: anthropic, Max iterations: 2
2025-08-28T17:59:51.723714Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1210 - 🔧 Optimizing samples with pre-tokenizer...
2025-08-28T17:59:51.765593Z INFO     pre_tokenizer.enhanced_optimizer:smart_sample_selection:132 - Found 1 distinct patterns in 56482 samples
2025-08-28T17:59:52.021559Z SUCCESS  pre_tokenizer.enhanced_optimizer:smart_sample_selection:172 - Selected 3 samples covering 1 patterns
2025-08-28T17:59:52.154894Z INFO     pre_tokenizer.pre_tokenizer:__init__:41 - Initialized PreTokenizer for claude-3-opus-20240229 with 30,000 max tokens
2025-08-28T17:59:52.155177Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:101 - Optimizing 3 samples for 30,000 tokens
2025-08-28T17:59:52.155738Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:116 - Reduced to 3 unique samples from 3
2025-08-28T17:59:52.155822Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:117 - Pattern distribution: {'error': 2}
2025-08-28T17:59:52.157514Z SUCCESS  pre_tokenizer.pre_tokenizer:optimize_samples:190 - Selected 3 samples using 1,778 tokens
2025-08-28T17:59:52.157664Z INFO     pre_tokenizer.pre_tokenizer:optimize_samples:191 - Pattern coverage: 100.0%
2025-08-28T17:59:52.157799Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1241 - 📊 Sample optimization: 56482 → 3 samples
2025-08-28T17:59:52.157949Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1242 - 📊 Token usage: 1,778 tokens
2025-08-28T17:59:52.158088Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1243 - 📊 Pattern coverage: 100.0%
2025-08-28T17:59:52.188017Z INFO     llm_iterative_session:_init_anthropic:433 - 🔍 Auto-detecting latest Anthropic model...
2025-08-28T17:59:52.188237Z INFO     llm_iterative_session:_detect_best_anthropic_model:140 - 🔍 Querying Anthropic API for available models...
2025-08-28T17:59:52.495587Z INFO     llm_iterative_session:_detect_best_anthropic_model:166 - Available Anthropic models: ['claude-opus-4-1-20250805', 'claude-opus-4-20250514', 'claude-sonnet-4-20250514', 'claude-3-7-sonnet-20250219', 'claude-3-5-sonnet-20241022']...
2025-08-28T17:59:52.498113Z INFO     llm_iterative_session:_detect_best_anthropic_model:187 - ✅ Selected best Opus model: claude-opus-4-1-20250805
2025-08-28T17:59:52.499268Z INFO     llm_iterative_session:_init_anthropic:435 - 🎯 Selected model: claude-opus-4-1-20250805
2025-08-28T17:59:52.826719Z INFO     llm_iterative_session:__init__:124 - 🤖 Iterative LLM Session initialized
2025-08-28T17:59:52.827363Z INFO     llm_iterative_session:__init__:125 -    Provider: anthropic
2025-08-28T17:59:52.827527Z INFO     llm_iterative_session:__init__:126 -    Model: claude-opus-4-1-20250805
2025-08-28T17:59:52.827666Z INFO     llm_iterative_session:__init__:127 -    Session: llm_session_20250828_175952
2025-08-28T17:59:52.827737Z INFO     llm_iterative_session:__init__:131 - 📊 Model Capabilities:
2025-08-28T17:59:52.827868Z INFO     llm_iterative_session:__init__:132 -    Context Window: 200,000 tokens
2025-08-28T17:59:52.832950Z INFO     llm_iterative_session:__init__:133 -    Max Input: 200,000 tokens
2025-08-28T17:59:52.837007Z INFO     llm_iterative_session:__init__:134 -    Max Output: 4,096 tokens
2025-08-28T17:59:52.837174Z INFO     llm_iterative_session:__init__:136 -    Cost: $0.000015/input, $0.000075/output per token
2025-08-28T17:59:52.837339Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1249 - 💰 Cost tracking: $0.000015/input token, $0.000075/output token
2025-08-28T17:59:52.837492Z INFO     llm_iterative_session:generate_initial_vrl:679 - 🚀 Starting VRL generation session (iteration 1)
2025-08-28T17:59:52.840509Z INFO     prompt_optimizer:_optimize_initial_configs:82 - Compressed vector_vrl_prompt: 19919 → 18026 chars (9.5% reduction)
2025-08-28T17:59:52.840729Z INFO     prompt_optimizer:_optimize_initial_configs:101 - Compressed parser_prompts: 10690 → 1988 chars (81.4% reduction)
2025-08-28T17:59:52.840882Z INFO     prompt_optimizer:_optimize_initial_configs:133 - Compressed type_maps: 2877 → 2749 chars (4.4% reduction)
2025-08-28T17:59:52.841688Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved user message to .tmp/llm_sessions/llm_session_20250828_175952/iter1_user.txt
2025-08-28T17:59:52.841812Z INFO     llm_iterative_session:_call_llm:1022 - 📤 Calling anthropic API
2025-08-28T17:59:52.841949Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 30288 chars
2025-08-28T18:00:33.476003Z INFO     llm_iterative_session:_call_llm:1038 - 📥 Response received in 40.6s (4867 chars)
2025-08-28T18:00:33.478223Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved assistant message to .tmp/llm_sessions/llm_session_20250828_175952/iter1_assistant.txt
2025-08-28T18:00:33.478302Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1263 - Testing iteration 1
2025-08-28T18:00:33.478362Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:00:33.478401Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - TESTING LLM-GENERATED VRL (Iteration 1)
2025-08-28T18:00:33.478436Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:00:33.478482Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - 
1. TESTING WITH PyVRL
2025-08-28T18:00:33.478522Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ----------------------------------------
2025-08-28T18:00:33.480280Z ERROR    vrl_testing_loop_clean:test_with_pyvrl:311 - ✗ PyVRL validation failed: 
error[E203]: syntax error
   ┌─ :20:9
   │
20 │       return
   │ ╭──────────^
   │ │ ╭────────'
21 │ │ │ }
   │ ╰─│^ unexpected syntax token: "Newline"
   │   ╰' expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
   ┌─ :21:1
   │
21 │ }
   │ ^
   │ │
   │ unexpected syntax token: "RBrace"
   │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
   │
   = see language documentation at https://vrl.dev
   = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :125:39
    │
125 │     .apache_error_message = msg_parts[last_index]
    │                                       ^^^^^^^^^^
    │                                       │
    │                                       unexpected syntax token: "Identifier"
    │                                       expected one of: "integer literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :126:3
    │
126 │   }
    │   ^
    │   │
    │   unexpected syntax token: "RBrace"
    │   expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :127:1
    │
127 │ }
    │ ^
    │ │
    │ unexpected syntax token: "RBrace"
    │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E103]: unhandled fallible assignment
    ┌─ :145:28
    │
145 │         client_end_parts = split(client_content, "]")
    │         ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    │         │                  │
    │         │                  this expression is fallible because at least one argument's type cannot be verified to be valid
    │         │                  update the expression to be infallible by adding a `!`: `split!(client_content, "]")`
    │         │                  `client_content` argument type is `string or null` and this function expected a parameter `value` of type `string`
    │         or change this to an infallible assignment:
    │         client_end_parts, err = split(client_content, "]")
    │
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see functions characteristics documentation at https://vrl.dev/expressions/#function-call-characteristics
    = learn more about error code 103 at https://errors.vrl.dev/103
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

2025-08-28T18:00:33.480377Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ❌ LLM VRL iteration 1 failed PyVRL validation
2025-08-28T18:00:33.480440Z INFO     llm_iterative_session:iterate_with_feedback:713 - 🔄 Iterating VRL generation (iteration 2)
2025-08-28T18:00:33.480637Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved user message to .tmp/llm_sessions/llm_session_20250828_175952/iter2_user.txt
2025-08-28T18:00:33.480695Z DEBUG    llm_iterative_session:_call_llm:1019 - Adding 1.4s delay for iteration 2 to avoid rate limits
2025-08-28T18:00:34.886423Z INFO     llm_iterative_session:_call_llm:1022 - 📤 Calling anthropic API
2025-08-28T18:00:34.887095Z DEBUG    llm_iterative_session:_call_llm:1023 -    Prompt length: 465 chars
2025-08-28T18:01:12.051381Z INFO     llm_iterative_session:_call_llm:1038 - 📥 Response received in 37.2s (5254 chars)
2025-08-28T18:01:12.053290Z DEBUG    llm_iterative_session:_save_conversation:1297 - 💾 Saved assistant message to .tmp/llm_sessions/llm_session_20250828_175952/iter2_assistant.txt
2025-08-28T18:01:12.053355Z INFO     vrl_testing_loop_clean:run_automated_llm_generation:1263 - Testing iteration 2
2025-08-28T18:01:12.053427Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:01:12.053511Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - TESTING LLM-GENERATED VRL (Iteration 2)
2025-08-28T18:01:12.053576Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ============================================================
2025-08-28T18:01:12.053649Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - 
1. TESTING WITH PyVRL
2025-08-28T18:01:12.053708Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ----------------------------------------
2025-08-28T18:01:12.058151Z ERROR    vrl_testing_loop_clean:test_with_pyvrl:311 - ✗ PyVRL validation failed: 
error[E203]: syntax error
    ┌─ :126:41
    │
126 │       .apache_error_message = msg_parts[last_index]
    │                                         ^^^^^^^^^^
    │                                         │
    │                                         unexpected syntax token: "Identifier"
    │                                         expected one of: "integer literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :127:5
    │
127 │     }
    │     ^
    │     │
    │     unexpected syntax token: "RBrace"
    │     expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :128:3
    │
128 │   }
    │   ^
    │   │
    │   unexpected syntax token: "RBrace"
    │   expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E103]: unhandled fallible assignment
    ┌─ :146:30
    │
146 │           client_end_parts = split(client_content, "]")
    │           ------------------ ^^^^^^^^^^^^^^^^^^^^^^^^^^
    │           │                  │
    │           │                  this expression is fallible because at least one argument's type cannot be verified to be valid
    │           │                  update the expression to be infallible by adding a `!`: `split!(client_content, "]")`
    │           │                  `client_content` argument type is `string or null` and this function expected a parameter `value` of type `string`
    │           or change this to an infallible assignment:
    │           client_end_parts, err = split(client_content, "]")
    │
    = see documentation about error handling at https://errors.vrl.dev/#handling
    = see functions characteristics documentation at https://vrl.dev/expressions/#function-call-characteristics
    = learn more about error code 103 at https://errors.vrl.dev/103
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

error[E203]: syntax error
    ┌─ :174:1
    │
174 │ }
    │ ^
    │ │
    │ unexpected syntax token: "RBrace"
    │ expected one of: "!", "(", "[", "_", "abort", "false", "float literal", "function call", "identifier", "if", "integer literal", "null", "raw string literal", "regex literal", "return", "string literal", "timestamp literal", "true", "{", "path literal"
    │
    = see language documentation at https://vrl.dev
    = try your code in the VRL REPL, learn more at https://vrl.dev/examples

2025-08-28T18:01:12.058470Z INFO     vrl_testing_loop_clean:_log_with_timestamp:1111 - ❌ LLM VRL iteration 2 failed PyVRL validation
2025-08-28T18:01:12.058570Z WARNING  vrl_testing_loop_clean:run_automated_llm_generation:1309 - Failed to generate valid VRL after 2 iterations
2025-08-28T18:01:12.058664Z INFO     llm_iterative_session:log_cost_summary:1406 - 💰 SESSION COST SUMMARY:
2025-08-28T18:01:12.058722Z INFO     llm_iterative_session:log_cost_summary:1407 -    Estimated cost: $0.3050
2025-08-28T18:01:12.058770Z INFO     llm_iterative_session:log_cost_summary:1408 -    Total tokens: ~10,217
2025-08-28T18:01:12.058812Z INFO     llm_iterative_session:log_cost_summary:1409 -    Iterations: 2
2025-08-28T18:01:12.058851Z INFO     llm_iterative_session:log_cost_summary:1410 -    Model: claude-opus-4-1-20250805
2025-08-28T18:01:12.058900Z WARNING  llm_iterative_session:log_cost_summary:1414 -    ℹ️  Anthropic doesn't provide a public credits API. Check console.anthropic.com for actual balance.
2025-08-28T18:01:12.058981Z WARNING  __main__:main:62 - 
❌ Failed to generate valid VRL within 2 iterations
